@page "/hotel-room/create"
@page "/hotel-room/edit/{Id:int}"

@using Models
@using Business.Repository.IRepository

@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
               @* onvalidsubmit zajisti ze budu fungovat validace, kterou mam v hotelroomdto.cs, jeste musim nize 
                doplnit DataAnnotationsValidator*@
                <EditForm Model="@HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator/>
                    @*<ValidationSummary/>*@
                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                         <ValidationMessage For="() => HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Rate</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                         <ValidationMessage For="() => HotelRoomModel.RegularRate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>SqFt</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                    </div>
                     <div class="form-group">
                        <label>Details</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                    </div>
                     <div class="form-group mt-4">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">Back To Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code 
{
    [Parameter]
    public int? Id { get; set; }
    private HotelRoomDto HotelRoomModel { get; set; } = new HotelRoomDto();
    private string Title { get; set; } = "Create";

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            //updating
            Title = "Update";
            HotelRoomModel = await HotelRoomRepository.GetHotelRoom(Id.Value);
        }
        else
        {
            //creating
            HotelRoomModel = new HotelRoomDto();
        }
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            //pokud je validace ok, muzeme pridat room
            var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);

            if (roomDetailsByName != null)
            {
                //duplicate room
                await JSRuntime.ToastrError("Room name alredy exists.");
                return;
            }

            if (HotelRoomModel.Id != 0 && Title == "Update")
            {
                //update
                var updateRoomResult = await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                await JSRuntime.ToastrSuccess("Hotel room updated.");
            }

            else
            {
                //create room
                var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
                await JSRuntime.ToastrSuccess("Hotel room created.");
            }
        }
        catch(Exception ex)
        {
            
        }
        
        
        NavigationManager.NavigateTo("hotel-room");
    }
    
}
